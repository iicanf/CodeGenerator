<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">
	<!--<conversionRule conversionWord="msg" converterClass="com.hcfc.mc.sensitive.SensitiveDataConverter"> </conversionRule>-->
	<property name="LOG_HOME" value="/var/app/logs" />
	<property name="PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}]-[%level]-[%thread]-[%X{traceId}]-[%logger.%M:%L]-%msg%n"/>
	<!--info log -->
	<appender name="info-rolling"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/app.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/app.log.%d{yyyy-MM-dd}</FileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<!--只接受 INFO 级别的日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
		</filter>
	</appender>
	<appender name="error-rolling"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/app_error.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/app_error.log.%d{yyyy-MM-dd}</FileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<!--ERROR 级别以上的日志都会集中在这里 -->
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
	</appender>
	<appender name="warn-rolling"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/app_warn.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${LOG_HOME}/app_warn.log.%d{yyyy-MM-dd}</FileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>
	<appender name="infoAppender" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="info-rolling" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<appender name="errorAppender" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="error-rolling" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<appender name="warnAppender" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="warn-rolling" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<appender name="stdoutAppender" class="ch.qos.logback.classic.AsyncAppender">
		<appender-ref ref="STDOUT" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<root level="INFO">
		<appender-ref ref="infoAppender" />
		<appender-ref ref="errorAppender" />
		<appender-ref ref="warnAppender" />
		<appender-ref ref="stdoutAppender" />
	</root>

	<!--log4jdbc -->
	<logger name="jdbc.sqltiming" level="debug"/>
	<logger name="com.ibatis" level="debug"/>
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="debug"/>
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="debug"/>
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="debug"/>
	<logger name="java.sql.Connection" level="debug"/>
	<logger name="java.sql.Statement" level="debug"/>
	<logger name="java.sql.PreparedStatement" level="debug"/>
	<logger name="java.sql.ResultSet" level="debug"/>
<!--	<logger name="com.iicanf.dao" level="debug"></logger>-->
</configuration>
